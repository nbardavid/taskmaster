const ProcessStatus = @This();

pub const BLOCK = 1;
pub const UNBLOCK = 2;
pub const SETMASK = 3;
pub const HUP = 1;
pub const INT = 2;
pub const QUIT = 3;
pub const ILL = 4;
pub const TRAP = 5;
pub const ABRT = 6;
pub const POLL = 7;
pub const IOT = ABRT;
pub const EMT = 7;
pub const FPE = 8;
pub const KILL = 9;
pub const BUS = 10;
pub const SEGV = 11;
pub const SYS = 12;
pub const PIPE = 13;
pub const ALRM = 14;
pub const TERM = 15;
pub const URG = 16;
pub const STOP = 17;
pub const TSTP = 18;
pub const CONT = 19;
pub const CHLD = 20;
pub const TTIN = 21;
pub const TTOU = 22;
pub const IO = 23;
pub const XCPU = 24;
pub const XFSZ = 25;
pub const VTALRM = 26;
pub const PROF = 27;
pub const WINCH = 28;
pub const INFO = 29;
pub const USR1 = 30;
pub const USR2 = 31;

const std = @import("std");

pub fn stringToSignal(str: []const u8) ?u8 {
    if (std.mem.eql(u8, str, "HUP")) return HUP;
    if (std.mem.eql(u8, str, "INT")) return INT;
    if (std.mem.eql(u8, str, "QUIT")) return QUIT;
    if (std.mem.eql(u8, str, "ILL")) return ILL;
    if (std.mem.eql(u8, str, "TRAP")) return TRAP;
    if (std.mem.eql(u8, str, "ABRT") or std.mem.eql(u8, str, "IOT")) return ABRT;
    if (std.mem.eql(u8, str, "EMT") or std.mem.eql(u8, str, "POLL")) return POLL;
    if (std.mem.eql(u8, str, "FPE")) return FPE;
    if (std.mem.eql(u8, str, "KILL")) return KILL;
    if (std.mem.eql(u8, str, "BUS")) return BUS;
    if (std.mem.eql(u8, str, "SEGV")) return SEGV;
    if (std.mem.eql(u8, str, "SYS")) return SYS;
    if (std.mem.eql(u8, str, "PIPE")) return PIPE;
    if (std.mem.eql(u8, str, "ALRM")) return ALRM;
    if (std.mem.eql(u8, str, "TERM")) return TERM;
    if (std.mem.eql(u8, str, "URG")) return URG;
    if (std.mem.eql(u8, str, "STOP")) return STOP;
    if (std.mem.eql(u8, str, "TSTP")) return TSTP;
    if (std.mem.eql(u8, str, "CONT")) return CONT;
    if (std.mem.eql(u8, str, "CHLD")) return CHLD;
    if (std.mem.eql(u8, str, "TTIN")) return TTIN;
    if (std.mem.eql(u8, str, "TTOU")) return TTOU;
    if (std.mem.eql(u8, str, "IO")) return IO;
    if (std.mem.eql(u8, str, "XCPU")) return XCPU;
    if (std.mem.eql(u8, str, "XFSZ")) return XFSZ;
    if (std.mem.eql(u8, str, "VTALRM")) return VTALRM;
    if (std.mem.eql(u8, str, "PROF")) return PROF;
    if (std.mem.eql(u8, str, "WINCH")) return WINCH;
    if (std.mem.eql(u8, str, "INFO")) return INFO;
    if (std.mem.eql(u8, str, "USR1")) return USR1;
    if (std.mem.eql(u8, str, "USR2")) return USR2;

    return null;
}
